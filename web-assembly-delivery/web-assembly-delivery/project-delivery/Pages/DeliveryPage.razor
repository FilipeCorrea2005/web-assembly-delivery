@page "/all-foods-page"

<PageTitle>Delivery Page</PageTitle>

<div class="container mx-auto px-4 py-7">
    <h2 class="text-2xl font-bold">@(h2Food ?? "Todos os Produtos") 🍟</h2>

    <div class="sm:flex-row sm:items-end mb-6 mt-2">
        <select id="foodFilter" class="max-w-sm mx-auto bg-white border border-gray-200 text-black text-sm rounded-lg focus:ring-yellow-500 focus:border-yellow-500 w-40 px-2 py-1.5 " @onchange="changeH2Name">
            <option value="Todos Produtos">Todos Produtos</option>
            @foreach(var type in typeFoods){
                <option value="@type">@type</option>
            }
        </select>
    </div>

    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
        @foreach (var food in foods.OrderBy(r => Guid.NewGuid()))
        {
            <div class="cursor-pointer" @onclick="e => sendToCart(food)">
                <NavLink href="/all-foods-page" class="block group transition-transform duration-300 transform hover:scale-[1.01] hover:shadow-xl rounded-xl overflow-hidden">
                    <div class="bg-white border border-gray-200 rounded-xl shadow group-hover:shadow-xl group-hover:scale-[1.01] transition-all duration-300">
                        <div class="relative">
                            <img src="@food.ImageUrl" alt="@food.Name" class="w-full h-48 object-cover" />
                        </div>
                        <div class="p-4">
                            <h3 class="text-lg font-bold text-gray-800 mb-1">@food.Name</h3>
                            <p class="text-sm text-gray-600 mb-3">@food.Description</p>
                            <div class="flex items-center mb-3">
                                <div class="flex text-yellow-400">
                                    @for (int i = 0; i < 4; i++)
                                    {
                                        <svg class="w-4 h-4" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 22 20">
                                            <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z" />
                                        </svg>
                                    }
                                    <svg class="w-4 h-4 text-gray-300" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 22 20">
                                        <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z" />
                                    </svg>
                                </div>
                            </div>
                            @if(food.descountedPrice != 0){
                                <span class="text-xl font-semibold text-gray-500 line-through">R$@food.descountedPrice.ToString("N2") </span>
                                <span>•</span>
                            }
                            <span class="text-xl font-semibold text-green-500"> R$@food.Price.ToString("N2")</span>
                        </div>
                    </div>
                </NavLink>
            </div>
        }
    </div>
</div>


@code {
    private List<Food> foods = new()
    {
        new Food { Name = "Pizza", Price=39.90 , descountedPrice =50.00 , Description = "Pizza Rechada com caputiry" , ImageUrl ="https://imgs.search.brave.com/pVOxl6h5rJTyFNB5osu_G8pNEPZGtHez8KM3vzGVUwc/rs:fit:860:0:0:0/g:ce/aHR0cHM6Ly91cGxv/YWQud2lraW1lZGlh/Lm9yZy93aWtpcGVk/aWEvY29tbW9ucy90/aHVtYi85LzkxL1Bp/enphLTMwMDczOTUu/anBnLzUxMnB4LVBp/enphLTMwMDczOTUu/anBn"},
        new Food { Name = "Hambúrguer",Price=24.30, descountedPrice = 30.00,Description = "X-Tudo" , ImageUrl ="https://imgs.search.brave.com/xMBL0QeuIXT1KLKiMSObqVmFhiHKjJcLVD8QlYkjqvI/rs:fit:860:0:0:0/g:ce/aHR0cHM6Ly9jYXJh/cHJldGEudnRleGFz/c2V0cy5jb20vYXJx/dWl2b3MvaWRzLzE1/NTUzMy04MDAtYXV0/bz92PTYzODU1MjA5/MDUzODgwMDAwMCZ3/aWR0aD04MDAmaGVp/Z2h0PWF1dG8mYXNw/ZWN0PXRydWU"},
        new Food { Name = "Sushi", Price=43.90 ,  Description = "Temaki Salmão" , ImageUrl = "images/foods/temaki-salmao.png" },
        new Food { Name = "Sushi", Price=43.90 , Description = "Temaki Salmão Hot" , ImageUrl = "images/foods/temaki-salmaohot.png" },
        new Food { Name = "Pizza", Price=50.70 , Description = "Pizza Rechada com caputiry" , ImageUrl ="images/foods/pizzahut-carne-seca.jpg"},
        new Food { Name = "Pizza",Price=50.30, Description = "Pizza Pepperoni" , ImageUrl ="images/foods/pizza-pepperoni.png"},
        new Food { Name = "Pizza", Price=29.90, descountedPrice = 39.90, Description = "Pizza Brigadeiro" , ImageUrl ="images/foods/pizza-brigadeiro.png"},
        new Food { Name = "Sushi",Price=45.900, Description = "Temaki Filadelfia" , ImageUrl ="images/foods/temaki-filadelfia.png"},
        new Food { Name = "Pizza", Price=45.70 , Description = "Pizza Mussarela" , ImageUrl ="images/foods/pizza-mussarela.png"},
        new Food { Name = "Pizza",Price=50.30, Description = "Pizza 4 Queijos" , ImageUrl ="images/foods/pizza-dominos-queijo.jpg"},
        new Food { Name = "Bebidas", Price=3.50 , Description = "Agua com Gas" , ImageUrl ="images/foods/agua-gas.png"},
        new Food { Name = "Bebidas", Price=2.50 , Description = "Agua sem Gas" , ImageUrl ="images/foods/agua.png"},
        new Food { Name = "Bebidas", Price=5.50 , Description = "Coca-Cola Lata" , ImageUrl ="images/foods/coca-lata.png"},
        new Food { Name = "Bebidas", Price=5.50 , Description = "Pepsi Lata" , ImageUrl ="images/foods/pepsi-lata.png"},
        new Food { Name = "Bebidas", Price=5.50 , Description = "Guaraná Lata" , ImageUrl ="images/foods/guarana-lata.png"},
        new Food { Name = "Bebidas", Price=5.50 , Description = "Fanta Laranja Lata" , ImageUrl ="images/foods/fanta-laranja-lata.png"},
        new Food { Name = "Bebidas", Price=5.50 , Description = "Suco de Uva" , ImageUrl ="images/foods/suco-uva.png"},
        new Food { Name = "Bebidas", Price=5.50 , Description = "Suco de Laranja" , ImageUrl ="images/foods/suco-laranja.png"},
        new Food { Name = "Bebidas", Price=5.50 , Description = "Suco de Abacaxi" , ImageUrl ="images/foods/suco-abacaxi.png"},
        new Food { Name = "Acai", Price=11.90 , Description = "Acai Puro" , ImageUrl ="images/foods/acai.png"},
        new Food { Name = "Acai", Price=13.90 , Description = "Acai com Banana" , ImageUrl ="images/foods/acai-banana.png"},
        new Food { Name = "Acai", Price=13.90 , Description = "Acai com Morango" , ImageUrl ="images/foods/acai-morango.png"},
        new Food { Name = "Acai", Price=15.90 , Description = "Acai com Banana e Morango" , ImageUrl ="images/foods/acai-banana-morango.png"},
        new Food { Name = "Hamburguer", Price=23.90 , Description = "Hamburguer" , ImageUrl ="images/foods/hamburguer1.png"},
        new Food { Name = "Hamburguer", Price=25.90 , Description = "Hamburguer" , ImageUrl ="images/foods/hamburguer2.png"},
    };
   
    static string h2Food { get; set; } = null;
    static List<string> typeFoods = allTypes(); 
    public static List<string> allTypes()
    {
        return Enum.GetNames(typeof(TypeFood)).ToList();
    }
    
    public void changeH2Name(ChangeEventArgs e){
        
        if("Todos Produtos".Equals(e.Value?.ToString())){
            h2Food = null;
            return;
        }

        h2Food = h2Food = "Filtrando por: " + e.Value?.ToString() + "s";
    }

    public void sendToCart(Food food){
        CartService.AddToCart(food);
        StateHasChanged();
    }
};